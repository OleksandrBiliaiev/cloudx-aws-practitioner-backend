service: product-service
frameworkVersion: "3"

plugins:
  - serverless-openapi-documentation
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  iam:
    role: arn:aws:iam::043770472754:role/DynamoDBLamdaFullAccessRole

functions:
  products:
    handler: getProductsList.getProductsList
    events:
      - http:
          path: /products
          method: get
          cors:
            origin: "https://dqbw3kxelkxvj.cloudfront.net" 
            headers: "*" 
          # request:
          #   schemas:
          #     application/json:
          #       schema: ${file(api_schema/get_product_list.schema.json)}
          # above commented code might lead to a failing response
          documentation:
            summary: "Get all product"
            description: "Returns a array of all products"
            requestBody:
              description: ""
            requestModels:
              application/json: "application/json"
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: "Success"
                responseModels:
                  application/json: "application/json"
  productsId:
    handler: getProductsById.getProductsById
    events:
      - http:
          path: /products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true
          cors:
            origin: "https://dqbw3kxelkxvj.cloudfront.net" 
            headers: "*"
          documentation:
            summary: "Get product by id"
            description: "Returns specific product, if Id found."
            requestBody:
              description: ""
            requestModels:
              application/json: "application/json"
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: "Success"
                responseModels:
                  application/json: "application/json"
  putProduct:
    handler: putProduct.putProduct
    events:
      - http:
          path: /product
          method: put
          cors:
            origin: "https://dqbw3kxelkxvj.cloudfront.net" 
            headers: "*"
          documentation:
            summary: "Put product."
            description: "Put product item into the DB."
            requestBody:
              description: ""
            requestModels:
              application/json: "application/json"
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: "Success"
                responseModels:
                  application/json: "application/json"
  catalogBatchProcess:
    role: iamLambdaRoleExecution
    handler: catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          arn: "arn:aws:sqs:us-east-1:043770472754:catalogItemsQueue"
          batchSize: 5

custom:
  documentation:
    version: "1"
    title: "Product API"
    description: "This is Product API"
    models: []

resources:
  - ${file(./sls/resources.yml)}


